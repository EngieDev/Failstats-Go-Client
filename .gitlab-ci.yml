image: golang:latest

stages: 
  - test
  - build
  - build_nfpm
  - package

test:
  stage: test
  script:
    - go get github.com/gofrs/uuid
    - go fmt 
    - go vet 
    - go test -race -cover
  
build:
  stage: build
  script:
    - mkdir builds
    - mkdir builds/linux
    - mkdir builds/linux/amd64
    - mkdir builds/linux/386
    - mkdir builds/linux/arm
    - mkdir builds/linux/arm64
    
    - go get github.com/gofrs/uuid
    
    - GOOS=linux GOARCH=amd64 go build $REPO_NAME -o builds/linux/amd64/failstats
    - GOOS=linux GOARCH=386 go build $REPO_NAME -o builds/linux/386/failstats
    - GOOS=linux GOARCH=arm go build $REPO_NAME -o builds/linux/arm/failstats
    - GOOS=linux GOARCH=arm64 go build $REPO_NAME -o builds/linux/arm64/failstats
  artifacts:
    when: on_success
    name: "$CI_JOB_NAME"
    paths:
      - builds

nfpm:
  stage: build_nfpm
  script: 
    - go get github.com/goreleaser/nfpm
    - go get -t github.com/goreleaser/nfpm/...

    - go test github.com/goreleaser/nfpm    
    - git clone https://github.com/goreleaser/nfpm nfpmGit
    - go build -o nfpm nfpmGit/cmd/nfpm/main.go

    - ./nfpm
  artifacts:
    when: on_success
    name: "$CI_JOB_NAME"
    paths:
      - builds
      - nfpm

nfpmPkgs:
  stage: package
  script:
    - version="$(cat version)"

    - cp nfpm.yaml nfpmActual.yaml
    - sed -i -e "s/{arch}/amd64/g" nfpmActual.yaml
    - sed -i -e "s/{version}/$version/g" nfpmActual.yaml
    
    - mkdir pkg
    - ./nfpm pkg --config ./nfpmActual.yaml --target pkg/failstats_dev$CI_BUILD_ID_$version_amd64.deb
    - ./nfpm pkg --config ./nfpmActual.yaml --target pkg/failstats_dev$CI_BUILD_ID_$version_amd64.rpm

  artifacts:
    when: on_success
    name: "$CI_JOB_NAME"
    paths:
      - builds
      - pkg
    